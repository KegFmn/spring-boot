server:
  port: 8082

spring:
  # 数据库配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/templateboot?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    username: root
    password: root

    druid:
      # 初始化大小，最大，最小
      initial-size: 5
      max-active: 100
      min-idle: 1
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存时间
      min-evictable-idle-time-millis: 300000
      # 用来检测连接是否有效的sql 必须是一个查询语句 注意没有此语句以下三个属性不会生效
      validation-query: SELECT 1 FROM DUAL
      # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: true
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 配置监控统计拦截的 Filter，去掉后监控界面 SQL 无法统计，wall 用于防火墙
      filters: stat,wall,log4j2
      # 通过 connection-properties 属性打开 mergeSql 功能；慢 SQL 记录
      connection-properties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      # 配置 DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: .js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
      # 配置 DruidStatViewServlet
      stat-view-servlet:
        url-pattern: /druid/*
        # IP 白名单，没有配置或者为空，则允许所有访问
        #allow: 127.0.0.1
        # IP 黑名单，若白名单也存在，则优先使用
        #deny: 192.168.31.253
        # 禁用 HTML 中 Reset All 按钮
        reset-enable: true
        # 登录用户名/密码
        login-username: root
        login-password: root
        # 注意 此处必须开启，否则无法访问druid监控面板
        enabled: true
      filter:
        slf4j:
          enabled: true
          statement-create-after-log-enabled: false
          statement-close-after-log-enabled: false
          result-set-open-after-log-enabled: false
          result-set-close-after-log-enabled: false
        config:
          enabled: true
      #合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true

  redis:
    host: 127.0.0.1
    port: 6379
    timeout: 2000
#    集群环境打开下面注释，单机不需要打开
#    cluster:
#      集群信息
#      nodes: xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx
#      #默认值是5 一般当此值设置过大时，容易报：Too many Cluster redirections
#      maxRedirects: 3
    lettuce:
      pool:
        #redis最小空闲连接数量,当空闲连接小于这个数之后会去申请空闲连接直到最大的空闲连接数量
        min-idle: 0
        #redis最大空闲连接数量 表示即使没有数据连接时依然可以保持50个空闲的连接而不被清除,随时处于待命状态
        max-idle: 8
        #最大连接数,这个直接设置成并发量就行，自己看着设置，一般设置成100就可以了，除非你是大项目
        max-active: 8
        #等待连接超时时间,如果在等待的连接时间超过了这个时间就舍弃掉,这里配置5分钟
        max-wait: -1
        time-between-eviction-runs: 1000
      shutdown-timeout: 10000
    password:

shiro-redis:
  enable: true
  redis-manager:
    host: 127.0.0.1:6379

logging:
  config: classpath:log4j2-dev.xml